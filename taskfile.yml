version: '3'

includes:
  setup: ./taskfiles/taskfile.setup.yml
  terminal: ./taskfiles/taskfile.terminal.yml
  neovim: ./taskfiles/taskfile.neovim.yml
  python: ./taskfiles/taskfile.python.yml
  sdkman: ./taskfiles/taskfile.sdkman.yml
  thunar: ./taskfiles/taskfile.thunar.yml

tasks:

  default:
    desc: Default
    cmds:
      - |
        echo "Home dir: {{.HOME}}"
        echo "Root dir: {{.ROOT_DIR}}"
        echo "Working dir: {{.USER_WORKING_DIR}}"
        echo "OS: {{OS}}"
        task --list
    silent: true

  assert:
    cmds:
      - for:
          var: REQUIRED_TOOLS
          split: ','
          as: TOOL
        cmd: |
          [ -n "$(which {{ .TOOL }})" ] || ( \
            echo "ERROR: `{{ .TOOL }}` not found" && exit 1; \
          )
    silent: true
    internal: true
    vars:
      REQUIRED_TOOLS: pre-commit, poetry

  setup:
    deps: [assert]
    desc: Set up poetry and pre-commit
    cmds:
      - task: precommit_setup
      - task: poetry_setup

  update:
    deps: [assert]
    desc: Update poetry and pre-commit
    cmds:
      - task: poetry_update
      - pre-commit autoupdate

  precommit_setup:
    internal: true
    deps: [assert]
    desc: Initialize pre-commit
    cmds:
      - pre-commit install
      - pre-commit autoupdate

  poetry_setup:
    internal: true
    deps: [assert]
    desc: Poetry local setup and install
    cmds:
      - poetry config virtualenvs.in-project true
      - rm -rf .venv
      - poetry install
      - poetry env info --path

  poetry_update:
    internal: true
    deps: [assert]
    desc: Update poetry dependencies
    cmds:
      - poetry update

  run:
    aliases: [pre_commit_run]
    deps: [assert]
    desc: Run pre-commit on all files
    cmds:
      - pre-commit run --color always --all-files

  poetry:
    deps: [assert]
    desc: Refresh poetry environment
    cmds:
      - poetry install

  test:
    aliases: [poetry_test]
    deps: [assert]
    desc: Run tests using poetry
    cmds:
      - poetry run pytest
